{"version":3,"sources":["components/qrCode.js","images/ld_logo_white.png","images/ld_logo_white_old.png","components/headerLogo.js","images/heart.svg","components/heart.js","components/customerLogo.js","images/toggle.png","images/toggle_old.png","components/toggle.js","components/votingButtons.js","App.js","reportWebVitals.js","util/getUserId.js","index.js"],"names":["withLDConsumer","flags","ldClient","variation","style","color","className","value","src","ldlogo","alt","oldldlogo","heart","showFeature","logo","toggle","oldtoggle","Button","styled","button","ButtonGroup","div","clicked","metric","track","onClick","App","useState","headerStyle","setHeaderStyle","reactBackgroundColor","useFlags","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getUserId","id","ls","get","uuidv4","set","a","asyncWithLDProvider","clientSideID","user","key","custom","device","deviceType","operatingSystem","osName","LDProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7de35949.chunk.js","sourcesContent":["import QRCode from \"react-qr-code\";\nimport { withLDConsumer } from \"launchdarkly-react-client-sdk\";\n\n//Change QRURL to the URL where you'll be hosting this app\nconst QRURL = \"https://ttotenberg-ld.github.io/traj_2022_qr/\";\n\nconst qrCodeHome = ({ flags, ldClient /*, ...otherProps */ }) => {\n  let showFeature = ldClient.variation(\"reactQRCode\");\n  \n  return showFeature ? (\n    <div>\n      <br />\n      <span style={{ color: 'black' }}><center>Scan me!</center></span>\n      <div className=\"qr-wrapper\">\n        <QRCode value={QRURL} />\n      </div>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default withLDConsumer()(qrCodeHome);\n","export default __webpack_public_path__ + \"static/media/ld_logo_white.c7ccd94b.png\";","export default __webpack_public_path__ + \"static/media/ld_logo_white_old.a7492e3d.png\";","import { withLDConsumer } from \"launchdarkly-react-client-sdk\";\nimport ldlogo from \"./../images/ld_logo_white.png\";\nimport oldldlogo from \"./../images/ld_logo_white_old.png\";\n\nconst headerLogo = ({ flags, ldClient /*, ...otherProps */ }) => {\n  let showFeature = ldClient.variation(\"reactChildHeaderLogo\");\n  \n  return showFeature ? (\n  <div>\n    <img src={ldlogo} className=\"LD-logo\" alt=\"logo\" />\n  </div>\n  ) : (\n  <div>\n    <img src={oldldlogo} className=\"LD-logo\" alt=\"logo\" />\n  </div>\n  );\n};\n\nexport default withLDConsumer()(headerLogo);\n\n","export default __webpack_public_path__ + \"static/media/heart.3d7839e5.svg\";","import { withLDConsumer } from \"launchdarkly-react-client-sdk\";\nimport heart from \"./../images/heart.svg\";\n\nconst showHeart = ({ flags, ldClient /*, ...otherProps */ }) => {\n  let showFeature = ldClient.variation(\"reactShowHeart\");\n\n  return showFeature ? (\n  <div>\n    <img src={heart} className=\"heart\" alt=\"heart\" />\n  </div>\n  ) : (\n  <div />\n  );\n};\n\nexport default withLDConsumer()(showHeart);","import { withLDConsumer } from \"launchdarkly-react-client-sdk\";\n\nconst customerLogo = ({ flags, ldClient /*, ...otherProps */ }) => {\n  let showFeature = ldClient.variation(\"reactShowCustomerLogo\");\n  let logo = ldClient.variation(\"reactCustomerLogo\");\n\n  return showFeature ? (\n  <div>\n    <img src={logo} className=\"customer-logo\" alt=\"customerLogo\" />\n  </div>\n  ) : (\n  <div />\n  );\n};\n\nexport default withLDConsumer()(customerLogo);","export default __webpack_public_path__ + \"static/media/toggle.1d752285.png\";","export default __webpack_public_path__ + \"static/media/toggle_old.09554e17.png\";","import { withLDConsumer } from \"launchdarkly-react-client-sdk\";\nimport toggle from \"./../images/toggle.png\";\nimport oldtoggle from \"./../images/toggle_old.png\";\n\nconst toggleLogo = ({ flags, ldClient /*, ...otherProps */ }) => {\n  let showFeature = ldClient.variation(\"reactChildToggle\");\n  \n  return showFeature ? (\n  <div>\n    <img src={toggle} className=\"toggle-logo\" alt=\"logo\" />\n  </div>\n  ) : (\n  <div>\n    <img src={oldtoggle} className=\"toggle-logo\" alt=\"logo\" />\n  </div>\n  );\n};\n\nexport default withLDConsumer()(toggleLogo);\n\n","import styled from \"styled-components\";\nimport { withLDConsumer } from \"launchdarkly-react-client-sdk\";\n\n\n\n\nconst Button = styled.button`\n  background-color: black;\n  color: white;\n  font-size: 20px;\n  padding: 10px 60px;\n  border-radius: 5px;\n  margin: 10px 10px;\n  cursor: pointer;\n`;\n\nconst ButtonGroup = styled.div`\n  display: grid;\n`\n\nconst votingButtons = ({ flags, ldClient /*, ...otherProps */ }) => {\n  let showFeature = ldClient.variation(\"votingButtons\");\n\n  function clicked(metric) {\n    ldClient.track(metric);\n  }\n  \n  return showFeature ? (\n    <div>\n      <br />\n      <ButtonGroup>\n        <Button onClick={clicked('button-1')}>\n          Test Button\n        </Button>\n        \n        <Button onClick={clicked('button-2')}>\n          Another Button\n        </Button>\n      </ButtonGroup>\n    </div>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default withLDConsumer()(votingButtons);\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport QRCode from \"./components/qrCode\";\nimport { useFlags } from \"launchdarkly-react-client-sdk\";\nimport HeaderLDLogo from \"./components/headerLogo\";\nimport Heart from \"./components/heart\";\nimport CustomerLogo from \"./components/customerLogo\";\nimport Toggle from \"./components/toggle\";\nimport Buttons from \"./components/votingButtons\";\n\nfunction App() {\n  const [headerStyle, setHeaderStyle] = useState(\"gray-app-header\");\n  const { reactBackgroundColor } = useFlags();\n\n  useEffect(() => {\n    setHeaderStyle(\"gray-app-header\");\n    const updateBackGroundColor = () => {\n      // Sets the className to \"purple-app-header\", \"blue-app-header\", etc.\n      const headerStyle = reactBackgroundColor + \"-app-header\";\n      setHeaderStyle(headerStyle);\n\n      return reactBackgroundColor;\n    };\n    updateBackGroundColor();\n  }, [reactBackgroundColor]);\n\n  return (\n    <div className={headerStyle}>\n      <div className=\"black-header\">\n        <HeaderLDLogo />\n      </div>\n      <div className={headerStyle}>\n        <Heart />\n        <CustomerLogo />\n        <QRCode />\n        <Buttons />\n        <br />\n        <Toggle />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {v4 as uuidv4} from 'uuid';\nimport ls from 'local-storage';\n\nfunction getUserId() {\n  let id;\n  if (ls.get('LD_User_Key')) {\n    id = ls.get('LD_User_Key');\n  } else {\n    id = uuidv4();\n    ls.set('LD_User_Key', id)\n  }\n  return id;\n}\n\nexport default getUserId;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { asyncWithLDProvider } from \"launchdarkly-react-client-sdk\";\nimport { deviceType, osName } from \"react-device-detect\";\nimport getUserId from \"./util/getUserId\";\n\nconst CLIENTKEY = \"6362a30d3c3dd20d19c1c7b3\";\n\nlet id = getUserId();\n\n(async () => {\n  const LDProvider = await asyncWithLDProvider({\n    clientSideID: CLIENTKEY,\n    user: {\n      key: id,\n      //dynamically set these custom attributes using the deviceType and osName selectors from the npm package\n      custom: {\n        device: deviceType,\n        operatingSystem: osName,\n      },\n    },\n  });\n\n  ReactDOM.render(\n    <LDProvider>\n      <App />\n    </LDProvider>,\n    document.getElementById(\"root\")\n  );\n})();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}